<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JDBC on MinsterBlog</title>
    <link>https://minster77.github.io/tags/jdbc/</link>
    <description>Recent content in JDBC on MinsterBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Sep 2021 16:22:25 +0800</lastBuildDate><atom:link href="https://minster77.github.io/tags/jdbc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>宋红康老师的JDBC笔记</title>
      <link>https://minster77.github.io/p/%E5%AE%8B%E7%BA%A2%E5%BA%B7%E8%80%81%E5%B8%88%E7%9A%84jdbc%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sun, 05 Sep 2021 16:22:25 +0800</pubDate>
      
      <guid>https://minster77.github.io/p/%E5%AE%8B%E7%BA%A2%E5%BA%B7%E8%80%81%E5%B8%88%E7%9A%84jdbc%E7%AC%94%E8%AE%B0/</guid>
      <description>JDBC核心技术
讲师：宋红康
微博：尚硅谷-宋红康
 第1章：JDBC概述 1.1 数据的持久化   持久化(persistence)：把数据保存到可掉电式存储设备中以供之后使用。大多数情况下，特别是企业级应用，数据持久化意味着将内存中的数据保存到硬盘上加以”固化”，而持久化的实现过程大多通过各种关系数据库来完成。
  持久化的主要应用是将内存中的数据存储在关系型数据库中，当然也可以存储在磁盘文件、XML数据文件中。
  1.2 Java中的数据存储技术   在Java中，数据库存取技术可分为如下几类：
  JDBC直接访问数据库
  JDO (Java Data Object )技术
  第三方O/R工具，如Hibernate, Mybatis 等
    JDBC是java访问数据库的基石，JDO、Hibernate、MyBatis等只是更好的封装了JDBC。
  1.3 JDBC介绍  JDBC(Java Database Connectivity)是一个独立于特定数据库管理系统、通用的SQL数据库存取和操作的公共接口（一组API），定义了用来访问数据库的标准Java类库，（java.sql,javax.sql）使用这些类库可以以一种标准的方法、方便地访问数据库资源。 JDBC为访问不同的数据库提供了一种统一的途径，为开发者屏蔽了一些细节问题。 JDBC的目标是使Java程序员使用JDBC可以连接任何提供了JDBC驱动程序的数据库系统，这样就使得程序员无需对特定的数据库系统的特点有过多的了解，从而大大简化和加快了开发过程。 如果没有JDBC，那么Java程序访问数据库时是这样的：    有了JDBC，Java程序访问数据库时是这样的：    总结如下：  1.4 JDBC体系结构  JDBC接口（API）包括两个层次：  面向应用的API：Java API，抽象接口，供应用程序开发人员使用（连接数据库，执行SQL语句，获得结果）。 面向数据库的API：Java Driver API，供开发商开发数据库驱动程序用。     JDBC是sun公司提供一套用于数据库操作的接口，java程序员只需要面向这套接口编程即可。</description>
    </item>
    
  </channel>
</rss>
